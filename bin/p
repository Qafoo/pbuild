#!/bin/bash
####
# Copyright (c) 2011, Jakob Westhoff <jakob@westhoffswelt.de>
# 
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#  - Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#  - Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
####

##
# Enable a stricter bash script processing to minimize errors in the code.
##
#set -o nounset
set -o errexit


##
# Default configuration options if not overwritten by '/etc/p'
##

BASE_DIR=$(dirname "$(readlink -f "$0")")/..

APP_DIR=${BASE_DIR}/p

PBUILD_DIR=${APP_DIR}/pbuilds
PACKAGE_DIR=${APP_DIR}/packages
PHP_DIR=${APP_DIR}/php

PHP_CONFIG_DIR=/etc/php

SHARED_DIR=${BASE_DIR}/share
FUNCTIONS_DIR=${SHARED_DIR}/functions

TEMP_DIR=/tmp
BUILD_DIR=${TEMP_DIR}/p/build


MAKE_OPTS="-j2"


##
# Path of the config file which is capable of overriding all the above made
# configuration
##
CONFIG_FILE="/etc/p"

##
# Print out an error to STDERR
#
# If the message is printed from within a dsl function show the line number as
# well as pbuild filename.
#
# Errors are considered fatal. After an error has been logged the execution of
# the whole application is stopped.
#
# @param message
##
perror() {
    local message="$@"

    if [ -z "${PBUILD}" ]; then
        echo "[!] ${message}" >&2
    else
        eval set -- $(caller 1)
        echo "[!] ${PBUILD}:${1}: ${message}" >&2
    fi

    exit 244
}

##
# Print some sort of log message
#
# @param message
##
plog() {
    local message="$@"
    echo "[>] ${message}" >&42
}

# Open the file descriptor with number 42 to point to stdout. This allows for
# logging from inside of functions with a return value.
exec 42>&1

##
# Return the first of many arguments
#
# This function can be used to retrieve the first shell expansion from a list
# of multiple expansions
##
getFirstArgument() {
    echo "$1"
}

##
# Import the configuration file if it does exist.
##
if [ -f "${CONFIG_FILE}" ]; then
    source "${CONFIG_FILE}"
fi

# Try to source all the needed functions and the base pbuild template
for file in "${FUNCTIONS_DIR}"/*; do
    source "${file}"
done

##
# Run the appropriate actions
##

## TODO: Commandline handling

PBUILD=$(findpbuild "$1")
plog "Using pbuild '${PBUILD}'"

# Close fd 42 again (We want to leave a clean env don't we? ;)
exec 42>&-
